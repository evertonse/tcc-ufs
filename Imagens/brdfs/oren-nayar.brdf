analytic ::begin parameters
#[type][name][min val][max val][default val]
::end parameters
::begin shader
//////////// START OF BUILTINS DECLARTION ////////////
vec3 var_0_vec_h;
vec3 var_3_vec_n;
float var_10_theta_h;
float var_11_theta_d;
float var_1_pi;
float var_2_epsilon;
vec3 var_4_vec_omega_i;
float var_5_theta_i;
float var_6_phi_i;
vec3 var_7_vec_omega_o;
float var_8_theta_o;
float var_9_phi_o;
//////////// END OF BUILTINS DECLARTION ////////////
//////////// START OF USER DECLARED ////////////
float var_14_sigma;
vec3 var_19_V;
vec3 var_20_N;
vec3 var_21_L;
float var_22_phi_text_diff;
float var_23_theta_i;
float var_24_theta_r;
float var_25_alpha;
float var_26_beta;
float var_27_C_3;
float var_28_C_1;
float var_29_rho;
float var_30_C_2;
float var_31_L_1;
float var_32_L_2;
float var_33_f;
//////////// END OF USER DECLARED ////////////
//////////// START FUNCTIONS DECLARATIONS ////////////
float var_12_text_abs(float var_13_v) { return max(var_13_v, (-var_13_v)); }
float var_15_text_step(float var_16_x) {
  return min(1.0, max(0.0, (var_16_x /
                            ((var_12_text_abs(var_16_x) + var_2_epsilon)))));
}
vec3 var_17_text_normalize(vec3 var_18_vec_u) {
  return (var_18_vec_u / sqrt(dot(var_18_vec_u, var_18_vec_u)));
}
//////////// END FUNCTIONS DECLARATIONS ////////////

vec3 BRDF(vec3 L, vec3 V, vec3 N, vec3 X, vec3 Y) {

  //////////// START OF BUILTINS INITIALIZATION ////////////
  var_0_vec_h = normalize(L + V);
  var_3_vec_n = normalize(N);
  var_1_pi = 3.141592653589793;
  var_2_epsilon = 1.192092896e-07;
  var_4_vec_omega_i = L;
  var_5_theta_i = atan(var_4_vec_omega_i.y, var_4_vec_omega_i.x);
  var_6_phi_i = atan(sqrt(var_4_vec_omega_i.y * var_4_vec_omega_i.y +
                          var_4_vec_omega_i.x * var_4_vec_omega_i.x),
                     var_4_vec_omega_i.z);
  var_7_vec_omega_o = V;
  var_8_theta_o = atan(var_7_vec_omega_o.y, var_7_vec_omega_o.x);
  var_9_phi_o = atan(sqrt(var_7_vec_omega_o.y * var_7_vec_omega_o.y +
                          var_7_vec_omega_o.x * var_7_vec_omega_o.x),
                     var_7_vec_omega_o.z);
  var_10_theta_h = acos(dot(var_0_vec_h, N));
  var_11_theta_d = acos(dot(var_0_vec_h, var_4_vec_omega_i));
  //////////// END OF BUILTINS INITIALIZATION ////////////

  var_14_sigma = ((30.0 * var_1_pi) / 180.0);
  var_19_V = var_7_vec_omega_o;
  var_20_N = var_3_vec_n;
  var_21_L = var_4_vec_omega_i;
  var_22_phi_text_diff =
      (dot(var_17_text_normalize(
               (var_19_V - (var_20_N * ((dot(var_19_V, var_20_N)))))),
           var_17_text_normalize(
               (var_21_L - (var_20_N * ((dot(var_21_L, var_20_N))))))));
  var_23_theta_i = acos(((dot(var_21_L, var_20_N))));
  var_24_theta_r = acos(((dot(var_19_V, var_20_N))));
  var_25_alpha = max(var_23_theta_i, var_24_theta_r);
  var_26_beta = min(var_23_theta_i, var_24_theta_r);
  var_27_C_3 =
      (((0.125 * (pow(var_14_sigma, 2.0))) /
        (((pow(var_14_sigma, 2.0)) + 0.09))) *
       pow((((((4.0 * var_25_alpha) * var_26_beta)) / ((var_1_pi * var_1_pi)))),
           2.0));
  var_28_C_1 = (1.0 - ((0.5 * (pow(var_14_sigma, 2.0))) /
                       (((pow(var_14_sigma, 2.0)) + 0.33))));
  var_29_rho = 0.9;
  var_30_C_2 =
      (((0.45 * (pow(var_14_sigma, 2.0))) /
        (((pow(var_14_sigma, 2.0)) + 0.09))) *
       (((var_15_text_step(var_22_phi_text_diff) * (sin((var_25_alpha)))) +
         (((1.0 - var_15_text_step(var_22_phi_text_diff))) *
          ((sin((var_25_alpha)) -
            pow(((2.0 * var_26_beta) / var_1_pi), 3.0)))))));
  var_31_L_1 =
      ((var_29_rho / var_1_pi) *
       (((var_28_C_1 +
          ((var_22_phi_text_diff * var_30_C_2) * tan((var_26_beta)))) +
         ((((1.0 - var_12_text_abs(var_22_phi_text_diff))) * var_27_C_3) *
          tan(((((var_25_alpha + var_26_beta)) / 2.0)))))));
  var_32_L_2 =
      ((((((0.17 * var_29_rho) * var_29_rho) / var_1_pi) *
         (pow(var_14_sigma, 2.0))) /
        (((pow(var_14_sigma, 2.0)) + 0.13))) *
       ((1.0 - ((var_22_phi_text_diff * (((4.0 * var_26_beta) * var_26_beta))) /
                ((var_1_pi * var_1_pi))))));
  var_33_f = (var_31_L_1 + var_32_L_2);

  return vec3(var_33_f);
}
